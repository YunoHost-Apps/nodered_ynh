#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INSTALL NODEJS
#=================================================
ynh_script_progression "Installing NodeJS..."

ynh_nodejs_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 750 "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R "$app:www-data" "$install_dir"
#=================================================
# SPECIFIC SETUP
#=================================================
# Install through npm
#=================================================
ynh_script_progression "Installing Node-RED..."

pushd "$install_dir"
    ynh_hide_warnings ynh_exec_as_app node_load_PATH" npm install --production
    ynh_hide_warnings ynh_exec_as_app node_load_PATH" npm install node-red-dashboard
popd

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration..."

# Set up the settings file
mkdir -p "$install_dir/data"
ynh_config_add --template="settings.js" --destination="$install_dir/data/settings.js"
ynh_config_add --template="settings.user.js" --destination="$install_dir/data/settings.user.js"

# Small hack to have the "/" path answer with a 200 code to satisfy the CI
if ynh_in_ci_tests ; then
    ynh_config_add --template="flows.json" --destination="$install_dir/data/flows.json"
fi

#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 400 "$install_dir/data/settings.js"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R "$app:www-data" "$install_dir"
#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

# Create a dedicated NGINX config
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd
yunohost service add "$app" --description="Low-code programming for event-driven applications"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service="$app" --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
