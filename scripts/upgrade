#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service="$app" --action="stop"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

# Flows were stored in file named after the hostname.
# Not very portable. Let's fix that.
if [[ ! -f "$install_dir/data/flows.json" ]]; then
    if [[ -f "$install_dir/data/flows_$(hostname).json" ]]; then
        mv "$install_dir/data/flows_$(hostname)_cred.json" "$install_dir/data/flows_cred.json"
        mv "$install_dir/data/flows_$(hostname).json" "$install_dir/data/flows.json"
    elif [[ -f "$install_dir/data/>>" ]]; then
        mv "$install_dir/data/>>_cred" "$install_dir/data/flows_cred.json"
        mv "$install_dir/data/>>" "$install_dir/data/flows.json"
    fi
fi

# Remove logrotate and log directory, we use syslog now
if [[ -d "/etc/logrotate.d/$app" ]]; then
    ynh_config_remove_logrotate
    ynh_safe_rm "/var/log/$app"
fi

# In older versions of the package, the port serving the webui was opened to anyone,
# allowing direct access to Node-RED... let's close it.
if yunohost firewall list | grep -q "\- $port$"; then
    ynh_hide_warnings yunohost firewall disallow TCP "$port"
fi

#=================================================
# UPGRADE NODEJS
#=================================================
ynh_script_progression "Upgrading NodeJS..."

ynh_nodejs_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

ynh_setup_source --dest_dir="$install_dir" --full_replace --keep="data"

#=================================================
# Install through npm
#=================================================
ynh_script_progression "Installing Node-RED..."

pushd "$install_dir"
    ynh_hide_warnings ynh_exec_as_app npm install --production
    ynh_hide_warnings ynh_exec_as_app npm install node-red-dashboard
popd

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating configuration..."

# Set up the settings file
ynh_config_add --template="settings.js" --destination="$install_dir/data/settings.js"
if [[ ! -f "$install_dir/data/settings.user.js" ]] ; then
    ynh_config_add --template="settings.user.js" --destination="$install_dir/data/settings.user.js"
fi

# Small hack to have the "/" path answer with a 200 code to satisfy the CI
if ynh_in_ci_tests ; then
    ynh_config_add --template="flows.json" --destination="$install_dir/data/flows.json"
fi

chmod -R o-rwx "$install_dir"
chown -R "$app:www-data" "$install_dir"

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

ynh_config_add_nginx

ynh_config_add_systemd

yunohost service add "$app" --description="Low-code programming for event-driven applications"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="$app" --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
